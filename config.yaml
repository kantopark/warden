# Auth determines the type of authentication. There are a number of possible options
auth:
  expiry: 24h  # token valid duration.  Valid time units are "ns", "us", "ms", "s", "m", "h"
  hash_cost: 20  # the cost to salt and hashing. If smaller than 10, will be set to 10
  signing_alg: HS256  # HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512
  public_key: your-public-key  # key used to verify token. If RS or ES, value is path to PEM file
  private_key: your-private-key  # key used to sign jwt token. If RS or ES, value is path to PEM file
  pw_len: 6  # minimum password length
  type: jwt

# deploy describes the actual function executor
deploy:
  type: docker  # runner to handle deployment, valid values are docker (for local test), swarm or kubernetes

# This should be the docker server settings for your private repository that
# are used to house the base images. i.e. the python runtime image
# If the username is empty, login is skipped.
docker:
  username: ""
  password: ""
  email: ""
  serveraddr: ""

# redis configuration. The redis is used as a in-memory store to handle intermediate
# operations within the application such as image building.
redis:
  image: redis:5.0.4-alpine
  addr: localhost
  port: 6379
  DB: 0
  password: ""
  restart_if_exist: false
  remove_on_exit: false  # if true, deletes the redis container when app exits. Otherwise, just flush the cache

registry:
  image: registry:2.7.1
  protocol: http
  domain: localhost
  port: 5000
  username: ""
  password: ""

# server configurations for the warden (control plane)
server:
  port: 8888
  graceperiod: 3s  # number of seconds for graceful shutdown

store:
  dsn: ":memory:" # postgres example:  "host=myhost port=1433 user=username dbname=dbname password=mypassword"
  dialect: sqlite3  # supports sqlite3, mssql, mysql, postgres
  log_mode: false  # used in debugging, this will print out all SQL logs
